/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as reportsTransactionLedgerDetailImport } from './routes/(reports)/transaction-ledger-detail'
import { Route as reportsSupplierLedgerDetailImport } from './routes/(reports)/supplier-ledger-detail'
import { Route as reportsSaleLedgerDetailImport } from './routes/(reports)/sale-ledger-detail'
import { Route as reportsPurchaseLedgerDetailImport } from './routes/(reports)/purchase-ledger-detail'
import { Route as reportsCustomerLedgerDetailImport } from './routes/(reports)/customer-ledger-detail'
import { Route as reportsAccountLedgerDetailImport } from './routes/(reports)/account-ledger-detail'
import { Route as errors503Import } from './routes/(errors)/503'
import { Route as errors500Import } from './routes/(errors)/500'
import { Route as errors404Import } from './routes/(errors)/404'
import { Route as errors403Import } from './routes/(errors)/403'
import { Route as errors401Import } from './routes/(errors)/401'
import { Route as authSignUpImport } from './routes/(auth)/sign-up'
import { Route as authSignIn2Import } from './routes/(auth)/sign-in-2'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedSettingsRouteImport } from './routes/_authenticated/settings/route'
import { Route as AuthenticatedUsersIndexImport } from './routes/_authenticated/users/index'
import { Route as AuthenticatedTransactionsIndexImport } from './routes/_authenticated/transactions/index'
import { Route as AuthenticatedTransactionLedgerIndexImport } from './routes/_authenticated/transaction-ledger/index'
import { Route as AuthenticatedTasksIndexImport } from './routes/_authenticated/tasks/index'
import { Route as AuthenticatedSuppliersIndexImport } from './routes/_authenticated/suppliers/index'
import { Route as AuthenticatedSupplierLedgerIndexImport } from './routes/_authenticated/supplier-ledger/index'
import { Route as AuthenticatedSettingsIndexImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedSaleIndexImport } from './routes/_authenticated/sale/index'
import { Route as AuthenticatedSaleViewIndexImport } from './routes/_authenticated/sale-view/index'
import { Route as AuthenticatedSaleLedgerIndexImport } from './routes/_authenticated/sale-ledger/index'
import { Route as AuthenticatedSaleAddIndexImport } from './routes/_authenticated/sale-add/index'
import { Route as AuthenticatedPurchaseIndexImport } from './routes/_authenticated/purchase/index'
import { Route as AuthenticatedPurchaseViewIndexImport } from './routes/_authenticated/purchase-view/index'
import { Route as AuthenticatedPurchaseLedgerIndexImport } from './routes/_authenticated/purchase-ledger/index'
import { Route as AuthenticatedPurchaseAddIndexImport } from './routes/_authenticated/purchase-add/index'
import { Route as AuthenticatedProductsIndexImport } from './routes/_authenticated/products/index'
import { Route as AuthenticatedMobileRepairIndexImport } from './routes/_authenticated/mobile-repair/index'
import { Route as AuthenticatedMobileLoadIndexImport } from './routes/_authenticated/mobile-load/index'
import { Route as AuthenticatedHelpCenterIndexImport } from './routes/_authenticated/help-center/index'
import { Route as AuthenticatedCustomersIndexImport } from './routes/_authenticated/customers/index'
import { Route as AuthenticatedCustomerLedgerIndexImport } from './routes/_authenticated/customer-ledger/index'
import { Route as AuthenticatedChatsIndexImport } from './routes/_authenticated/chats/index'
import { Route as AuthenticatedAppsIndexImport } from './routes/_authenticated/apps/index'
import { Route as AuthenticatedAccountsIndexImport } from './routes/_authenticated/accounts/index'
import { Route as AuthenticatedAccountLedgerIndexImport } from './routes/_authenticated/account-ledger/index'
import { Route as AuthenticatedSettingsNotificationsImport } from './routes/_authenticated/settings/notifications'
import { Route as AuthenticatedSettingsDisplayImport } from './routes/_authenticated/settings/display'
import { Route as AuthenticatedSettingsAppearanceImport } from './routes/_authenticated/settings/appearance'
import { Route as AuthenticatedSettingsAccountImport } from './routes/_authenticated/settings/account'

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const reportsTransactionLedgerDetailRoute =
  reportsTransactionLedgerDetailImport.update({
    id: '/(reports)/transaction-ledger-detail',
    path: '/transaction-ledger-detail',
    getParentRoute: () => rootRoute,
  } as any)

const reportsSupplierLedgerDetailRoute =
  reportsSupplierLedgerDetailImport.update({
    id: '/(reports)/supplier-ledger-detail',
    path: '/supplier-ledger-detail',
    getParentRoute: () => rootRoute,
  } as any)

const reportsSaleLedgerDetailRoute = reportsSaleLedgerDetailImport.update({
  id: '/(reports)/sale-ledger-detail',
  path: '/sale-ledger-detail',
  getParentRoute: () => rootRoute,
} as any)

const reportsPurchaseLedgerDetailRoute =
  reportsPurchaseLedgerDetailImport.update({
    id: '/(reports)/purchase-ledger-detail',
    path: '/purchase-ledger-detail',
    getParentRoute: () => rootRoute,
  } as any)

const reportsCustomerLedgerDetailRoute =
  reportsCustomerLedgerDetailImport.update({
    id: '/(reports)/customer-ledger-detail',
    path: '/customer-ledger-detail',
    getParentRoute: () => rootRoute,
  } as any)

const reportsAccountLedgerDetailRoute = reportsAccountLedgerDetailImport.update(
  {
    id: '/(reports)/account-ledger-detail',
    path: '/account-ledger-detail',
    getParentRoute: () => rootRoute,
  } as any,
)

const errors503Route = errors503Import.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRoute,
} as any)

const errors500Route = errors500Import.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const errors404Route = errors404Import.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const errors403Route = errors403Import.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const errors401Route = errors401Import.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRoute,
} as any)

const authSignUpRoute = authSignUpImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const authSignIn2Route = authSignIn2Import.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => rootRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSettingsRouteRoute = AuthenticatedSettingsRouteImport.update(
  {
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedUsersIndexRoute = AuthenticatedUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedTransactionsIndexRoute =
  AuthenticatedTransactionsIndexImport.update({
    id: '/transactions/',
    path: '/transactions/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedTransactionLedgerIndexRoute =
  AuthenticatedTransactionLedgerIndexImport.update({
    id: '/transaction-ledger/',
    path: '/transaction-ledger/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedTasksIndexRoute = AuthenticatedTasksIndexImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSuppliersIndexRoute =
  AuthenticatedSuppliersIndexImport.update({
    id: '/suppliers/',
    path: '/suppliers/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedSupplierLedgerIndexRoute =
  AuthenticatedSupplierLedgerIndexImport.update({
    id: '/supplier-ledger/',
    path: '/supplier-ledger/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedSettingsIndexRoute = AuthenticatedSettingsIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any,
)

const AuthenticatedSaleIndexRoute = AuthenticatedSaleIndexImport.update({
  id: '/sale/',
  path: '/sale/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedSaleViewIndexRoute = AuthenticatedSaleViewIndexImport.update(
  {
    id: '/sale-view/',
    path: '/sale-view/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedSaleLedgerIndexRoute =
  AuthenticatedSaleLedgerIndexImport.update({
    id: '/sale-ledger/',
    path: '/sale-ledger/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedSaleAddIndexRoute = AuthenticatedSaleAddIndexImport.update({
  id: '/sale-add/',
  path: '/sale-add/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedPurchaseIndexRoute = AuthenticatedPurchaseIndexImport.update(
  {
    id: '/purchase/',
    path: '/purchase/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedPurchaseViewIndexRoute =
  AuthenticatedPurchaseViewIndexImport.update({
    id: '/purchase-view/',
    path: '/purchase-view/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedPurchaseLedgerIndexRoute =
  AuthenticatedPurchaseLedgerIndexImport.update({
    id: '/purchase-ledger/',
    path: '/purchase-ledger/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedPurchaseAddIndexRoute =
  AuthenticatedPurchaseAddIndexImport.update({
    id: '/purchase-add/',
    path: '/purchase-add/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedProductsIndexRoute = AuthenticatedProductsIndexImport.update(
  {
    id: '/products/',
    path: '/products/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedMobileRepairIndexRoute =
  AuthenticatedMobileRepairIndexImport.update({
    id: '/mobile-repair/',
    path: '/mobile-repair/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedMobileLoadIndexRoute =
  AuthenticatedMobileLoadIndexImport.update({
    id: '/mobile-load/',
    path: '/mobile-load/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedHelpCenterIndexRoute =
  AuthenticatedHelpCenterIndexImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedCustomersIndexRoute =
  AuthenticatedCustomersIndexImport.update({
    id: '/customers/',
    path: '/customers/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedCustomerLedgerIndexRoute =
  AuthenticatedCustomerLedgerIndexImport.update({
    id: '/customer-ledger/',
    path: '/customer-ledger/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedChatsIndexRoute = AuthenticatedChatsIndexImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAppsIndexRoute = AuthenticatedAppsIndexImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAccountsIndexRoute = AuthenticatedAccountsIndexImport.update(
  {
    id: '/accounts/',
    path: '/accounts/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedAccountLedgerIndexRoute =
  AuthenticatedAccountLedgerIndexImport.update({
    id: '/account-ledger/',
    path: '/account-ledger/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedSettingsNotificationsRoute =
  AuthenticatedSettingsNotificationsImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsDisplayRoute =
  AuthenticatedSettingsDisplayImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAppearanceRoute =
  AuthenticatedSettingsAppearanceImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

const AuthenticatedSettingsAccountRoute =
  AuthenticatedSettingsAccountImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503Import
      parentRoute: typeof rootRoute
    }
    '/(reports)/account-ledger-detail': {
      id: '/(reports)/account-ledger-detail'
      path: '/account-ledger-detail'
      fullPath: '/account-ledger-detail'
      preLoaderRoute: typeof reportsAccountLedgerDetailImport
      parentRoute: typeof rootRoute
    }
    '/(reports)/customer-ledger-detail': {
      id: '/(reports)/customer-ledger-detail'
      path: '/customer-ledger-detail'
      fullPath: '/customer-ledger-detail'
      preLoaderRoute: typeof reportsCustomerLedgerDetailImport
      parentRoute: typeof rootRoute
    }
    '/(reports)/purchase-ledger-detail': {
      id: '/(reports)/purchase-ledger-detail'
      path: '/purchase-ledger-detail'
      fullPath: '/purchase-ledger-detail'
      preLoaderRoute: typeof reportsPurchaseLedgerDetailImport
      parentRoute: typeof rootRoute
    }
    '/(reports)/sale-ledger-detail': {
      id: '/(reports)/sale-ledger-detail'
      path: '/sale-ledger-detail'
      fullPath: '/sale-ledger-detail'
      preLoaderRoute: typeof reportsSaleLedgerDetailImport
      parentRoute: typeof rootRoute
    }
    '/(reports)/supplier-ledger-detail': {
      id: '/(reports)/supplier-ledger-detail'
      path: '/supplier-ledger-detail'
      fullPath: '/supplier-ledger-detail'
      preLoaderRoute: typeof reportsSupplierLedgerDetailImport
      parentRoute: typeof rootRoute
    }
    '/(reports)/transaction-ledger-detail': {
      id: '/(reports)/transaction-ledger-detail'
      path: '/transaction-ledger-detail'
      fullPath: '/transaction-ledger-detail'
      preLoaderRoute: typeof reportsTransactionLedgerDetailImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/account-ledger/': {
      id: '/_authenticated/account-ledger/'
      path: '/account-ledger'
      fullPath: '/account-ledger'
      preLoaderRoute: typeof AuthenticatedAccountLedgerIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/accounts/': {
      id: '/_authenticated/accounts/'
      path: '/accounts'
      fullPath: '/accounts'
      preLoaderRoute: typeof AuthenticatedAccountsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/customer-ledger/': {
      id: '/_authenticated/customer-ledger/'
      path: '/customer-ledger'
      fullPath: '/customer-ledger'
      preLoaderRoute: typeof AuthenticatedCustomerLedgerIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/customers/': {
      id: '/_authenticated/customers/'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof AuthenticatedCustomersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/mobile-load/': {
      id: '/_authenticated/mobile-load/'
      path: '/mobile-load'
      fullPath: '/mobile-load'
      preLoaderRoute: typeof AuthenticatedMobileLoadIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/mobile-repair/': {
      id: '/_authenticated/mobile-repair/'
      path: '/mobile-repair'
      fullPath: '/mobile-repair'
      preLoaderRoute: typeof AuthenticatedMobileRepairIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/products/': {
      id: '/_authenticated/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AuthenticatedProductsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/purchase-add/': {
      id: '/_authenticated/purchase-add/'
      path: '/purchase-add'
      fullPath: '/purchase-add'
      preLoaderRoute: typeof AuthenticatedPurchaseAddIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/purchase-ledger/': {
      id: '/_authenticated/purchase-ledger/'
      path: '/purchase-ledger'
      fullPath: '/purchase-ledger'
      preLoaderRoute: typeof AuthenticatedPurchaseLedgerIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/purchase-view/': {
      id: '/_authenticated/purchase-view/'
      path: '/purchase-view'
      fullPath: '/purchase-view'
      preLoaderRoute: typeof AuthenticatedPurchaseViewIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/purchase/': {
      id: '/_authenticated/purchase/'
      path: '/purchase'
      fullPath: '/purchase'
      preLoaderRoute: typeof AuthenticatedPurchaseIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/sale-add/': {
      id: '/_authenticated/sale-add/'
      path: '/sale-add'
      fullPath: '/sale-add'
      preLoaderRoute: typeof AuthenticatedSaleAddIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/sale-ledger/': {
      id: '/_authenticated/sale-ledger/'
      path: '/sale-ledger'
      fullPath: '/sale-ledger'
      preLoaderRoute: typeof AuthenticatedSaleLedgerIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/sale-view/': {
      id: '/_authenticated/sale-view/'
      path: '/sale-view'
      fullPath: '/sale-view'
      preLoaderRoute: typeof AuthenticatedSaleViewIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/sale/': {
      id: '/_authenticated/sale/'
      path: '/sale'
      fullPath: '/sale'
      preLoaderRoute: typeof AuthenticatedSaleIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexImport
      parentRoute: typeof AuthenticatedSettingsRouteImport
    }
    '/_authenticated/supplier-ledger/': {
      id: '/_authenticated/supplier-ledger/'
      path: '/supplier-ledger'
      fullPath: '/supplier-ledger'
      preLoaderRoute: typeof AuthenticatedSupplierLedgerIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/suppliers/': {
      id: '/_authenticated/suppliers/'
      path: '/suppliers'
      fullPath: '/suppliers'
      preLoaderRoute: typeof AuthenticatedSuppliersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/transaction-ledger/': {
      id: '/_authenticated/transaction-ledger/'
      path: '/transaction-ledger'
      fullPath: '/transaction-ledger'
      preLoaderRoute: typeof AuthenticatedTransactionLedgerIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/transactions/': {
      id: '/_authenticated/transactions/'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof AuthenticatedTransactionsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedSettingsRouteRouteChildren {
  AuthenticatedSettingsAccountRoute: typeof AuthenticatedSettingsAccountRoute
  AuthenticatedSettingsAppearanceRoute: typeof AuthenticatedSettingsAppearanceRoute
  AuthenticatedSettingsDisplayRoute: typeof AuthenticatedSettingsDisplayRoute
  AuthenticatedSettingsNotificationsRoute: typeof AuthenticatedSettingsNotificationsRoute
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
}

const AuthenticatedSettingsRouteRouteChildren: AuthenticatedSettingsRouteRouteChildren =
  {
    AuthenticatedSettingsAccountRoute: AuthenticatedSettingsAccountRoute,
    AuthenticatedSettingsAppearanceRoute: AuthenticatedSettingsAppearanceRoute,
    AuthenticatedSettingsDisplayRoute: AuthenticatedSettingsDisplayRoute,
    AuthenticatedSettingsNotificationsRoute:
      AuthenticatedSettingsNotificationsRoute,
    AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  }

const AuthenticatedSettingsRouteRouteWithChildren =
  AuthenticatedSettingsRouteRoute._addFileChildren(
    AuthenticatedSettingsRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteRoute: typeof AuthenticatedSettingsRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAccountLedgerIndexRoute: typeof AuthenticatedAccountLedgerIndexRoute
  AuthenticatedAccountsIndexRoute: typeof AuthenticatedAccountsIndexRoute
  AuthenticatedAppsIndexRoute: typeof AuthenticatedAppsIndexRoute
  AuthenticatedChatsIndexRoute: typeof AuthenticatedChatsIndexRoute
  AuthenticatedCustomerLedgerIndexRoute: typeof AuthenticatedCustomerLedgerIndexRoute
  AuthenticatedCustomersIndexRoute: typeof AuthenticatedCustomersIndexRoute
  AuthenticatedHelpCenterIndexRoute: typeof AuthenticatedHelpCenterIndexRoute
  AuthenticatedMobileLoadIndexRoute: typeof AuthenticatedMobileLoadIndexRoute
  AuthenticatedMobileRepairIndexRoute: typeof AuthenticatedMobileRepairIndexRoute
  AuthenticatedProductsIndexRoute: typeof AuthenticatedProductsIndexRoute
  AuthenticatedPurchaseAddIndexRoute: typeof AuthenticatedPurchaseAddIndexRoute
  AuthenticatedPurchaseLedgerIndexRoute: typeof AuthenticatedPurchaseLedgerIndexRoute
  AuthenticatedPurchaseViewIndexRoute: typeof AuthenticatedPurchaseViewIndexRoute
  AuthenticatedPurchaseIndexRoute: typeof AuthenticatedPurchaseIndexRoute
  AuthenticatedSaleAddIndexRoute: typeof AuthenticatedSaleAddIndexRoute
  AuthenticatedSaleLedgerIndexRoute: typeof AuthenticatedSaleLedgerIndexRoute
  AuthenticatedSaleViewIndexRoute: typeof AuthenticatedSaleViewIndexRoute
  AuthenticatedSaleIndexRoute: typeof AuthenticatedSaleIndexRoute
  AuthenticatedSupplierLedgerIndexRoute: typeof AuthenticatedSupplierLedgerIndexRoute
  AuthenticatedSuppliersIndexRoute: typeof AuthenticatedSuppliersIndexRoute
  AuthenticatedTasksIndexRoute: typeof AuthenticatedTasksIndexRoute
  AuthenticatedTransactionLedgerIndexRoute: typeof AuthenticatedTransactionLedgerIndexRoute
  AuthenticatedTransactionsIndexRoute: typeof AuthenticatedTransactionsIndexRoute
  AuthenticatedUsersIndexRoute: typeof AuthenticatedUsersIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteRoute: AuthenticatedSettingsRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAccountLedgerIndexRoute: AuthenticatedAccountLedgerIndexRoute,
  AuthenticatedAccountsIndexRoute: AuthenticatedAccountsIndexRoute,
  AuthenticatedAppsIndexRoute: AuthenticatedAppsIndexRoute,
  AuthenticatedChatsIndexRoute: AuthenticatedChatsIndexRoute,
  AuthenticatedCustomerLedgerIndexRoute: AuthenticatedCustomerLedgerIndexRoute,
  AuthenticatedCustomersIndexRoute: AuthenticatedCustomersIndexRoute,
  AuthenticatedHelpCenterIndexRoute: AuthenticatedHelpCenterIndexRoute,
  AuthenticatedMobileLoadIndexRoute: AuthenticatedMobileLoadIndexRoute,
  AuthenticatedMobileRepairIndexRoute: AuthenticatedMobileRepairIndexRoute,
  AuthenticatedProductsIndexRoute: AuthenticatedProductsIndexRoute,
  AuthenticatedPurchaseAddIndexRoute: AuthenticatedPurchaseAddIndexRoute,
  AuthenticatedPurchaseLedgerIndexRoute: AuthenticatedPurchaseLedgerIndexRoute,
  AuthenticatedPurchaseViewIndexRoute: AuthenticatedPurchaseViewIndexRoute,
  AuthenticatedPurchaseIndexRoute: AuthenticatedPurchaseIndexRoute,
  AuthenticatedSaleAddIndexRoute: AuthenticatedSaleAddIndexRoute,
  AuthenticatedSaleLedgerIndexRoute: AuthenticatedSaleLedgerIndexRoute,
  AuthenticatedSaleViewIndexRoute: AuthenticatedSaleViewIndexRoute,
  AuthenticatedSaleIndexRoute: AuthenticatedSaleIndexRoute,
  AuthenticatedSupplierLedgerIndexRoute: AuthenticatedSupplierLedgerIndexRoute,
  AuthenticatedSuppliersIndexRoute: AuthenticatedSuppliersIndexRoute,
  AuthenticatedTasksIndexRoute: AuthenticatedTasksIndexRoute,
  AuthenticatedTransactionLedgerIndexRoute:
    AuthenticatedTransactionLedgerIndexRoute,
  AuthenticatedTransactionsIndexRoute: AuthenticatedTransactionsIndexRoute,
  AuthenticatedUsersIndexRoute: AuthenticatedUsersIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/account-ledger-detail': typeof reportsAccountLedgerDetailRoute
  '/customer-ledger-detail': typeof reportsCustomerLedgerDetailRoute
  '/purchase-ledger-detail': typeof reportsPurchaseLedgerDetailRoute
  '/sale-ledger-detail': typeof reportsSaleLedgerDetailRoute
  '/supplier-ledger-detail': typeof reportsSupplierLedgerDetailRoute
  '/transaction-ledger-detail': typeof reportsTransactionLedgerDetailRoute
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/account-ledger': typeof AuthenticatedAccountLedgerIndexRoute
  '/accounts': typeof AuthenticatedAccountsIndexRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/customer-ledger': typeof AuthenticatedCustomerLedgerIndexRoute
  '/customers': typeof AuthenticatedCustomersIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/mobile-load': typeof AuthenticatedMobileLoadIndexRoute
  '/mobile-repair': typeof AuthenticatedMobileRepairIndexRoute
  '/products': typeof AuthenticatedProductsIndexRoute
  '/purchase-add': typeof AuthenticatedPurchaseAddIndexRoute
  '/purchase-ledger': typeof AuthenticatedPurchaseLedgerIndexRoute
  '/purchase-view': typeof AuthenticatedPurchaseViewIndexRoute
  '/purchase': typeof AuthenticatedPurchaseIndexRoute
  '/sale-add': typeof AuthenticatedSaleAddIndexRoute
  '/sale-ledger': typeof AuthenticatedSaleLedgerIndexRoute
  '/sale-view': typeof AuthenticatedSaleViewIndexRoute
  '/sale': typeof AuthenticatedSaleIndexRoute
  '/settings/': typeof AuthenticatedSettingsIndexRoute
  '/supplier-ledger': typeof AuthenticatedSupplierLedgerIndexRoute
  '/suppliers': typeof AuthenticatedSuppliersIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/transaction-ledger': typeof AuthenticatedTransactionLedgerIndexRoute
  '/transactions': typeof AuthenticatedTransactionsIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
}

export interface FileRoutesByTo {
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/account-ledger-detail': typeof reportsAccountLedgerDetailRoute
  '/customer-ledger-detail': typeof reportsCustomerLedgerDetailRoute
  '/purchase-ledger-detail': typeof reportsPurchaseLedgerDetailRoute
  '/sale-ledger-detail': typeof reportsSaleLedgerDetailRoute
  '/supplier-ledger-detail': typeof reportsSupplierLedgerDetailRoute
  '/transaction-ledger-detail': typeof reportsTransactionLedgerDetailRoute
  '/': typeof AuthenticatedIndexRoute
  '/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/account-ledger': typeof AuthenticatedAccountLedgerIndexRoute
  '/accounts': typeof AuthenticatedAccountsIndexRoute
  '/apps': typeof AuthenticatedAppsIndexRoute
  '/chats': typeof AuthenticatedChatsIndexRoute
  '/customer-ledger': typeof AuthenticatedCustomerLedgerIndexRoute
  '/customers': typeof AuthenticatedCustomersIndexRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexRoute
  '/mobile-load': typeof AuthenticatedMobileLoadIndexRoute
  '/mobile-repair': typeof AuthenticatedMobileRepairIndexRoute
  '/products': typeof AuthenticatedProductsIndexRoute
  '/purchase-add': typeof AuthenticatedPurchaseAddIndexRoute
  '/purchase-ledger': typeof AuthenticatedPurchaseLedgerIndexRoute
  '/purchase-view': typeof AuthenticatedPurchaseViewIndexRoute
  '/purchase': typeof AuthenticatedPurchaseIndexRoute
  '/sale-add': typeof AuthenticatedSaleAddIndexRoute
  '/sale-ledger': typeof AuthenticatedSaleLedgerIndexRoute
  '/sale-view': typeof AuthenticatedSaleViewIndexRoute
  '/sale': typeof AuthenticatedSaleIndexRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/supplier-ledger': typeof AuthenticatedSupplierLedgerIndexRoute
  '/suppliers': typeof AuthenticatedSuppliersIndexRoute
  '/tasks': typeof AuthenticatedTasksIndexRoute
  '/transaction-ledger': typeof AuthenticatedTransactionLedgerIndexRoute
  '/transactions': typeof AuthenticatedTransactionsIndexRoute
  '/users': typeof AuthenticatedUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-2': typeof authSignIn2Route
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/(reports)/account-ledger-detail': typeof reportsAccountLedgerDetailRoute
  '/(reports)/customer-ledger-detail': typeof reportsCustomerLedgerDetailRoute
  '/(reports)/purchase-ledger-detail': typeof reportsPurchaseLedgerDetailRoute
  '/(reports)/sale-ledger-detail': typeof reportsSaleLedgerDetailRoute
  '/(reports)/supplier-ledger-detail': typeof reportsSupplierLedgerDetailRoute
  '/(reports)/transaction-ledger-detail': typeof reportsTransactionLedgerDetailRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsRoute
  '/_authenticated/account-ledger/': typeof AuthenticatedAccountLedgerIndexRoute
  '/_authenticated/accounts/': typeof AuthenticatedAccountsIndexRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexRoute
  '/_authenticated/customer-ledger/': typeof AuthenticatedCustomerLedgerIndexRoute
  '/_authenticated/customers/': typeof AuthenticatedCustomersIndexRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexRoute
  '/_authenticated/mobile-load/': typeof AuthenticatedMobileLoadIndexRoute
  '/_authenticated/mobile-repair/': typeof AuthenticatedMobileRepairIndexRoute
  '/_authenticated/products/': typeof AuthenticatedProductsIndexRoute
  '/_authenticated/purchase-add/': typeof AuthenticatedPurchaseAddIndexRoute
  '/_authenticated/purchase-ledger/': typeof AuthenticatedPurchaseLedgerIndexRoute
  '/_authenticated/purchase-view/': typeof AuthenticatedPurchaseViewIndexRoute
  '/_authenticated/purchase/': typeof AuthenticatedPurchaseIndexRoute
  '/_authenticated/sale-add/': typeof AuthenticatedSaleAddIndexRoute
  '/_authenticated/sale-ledger/': typeof AuthenticatedSaleLedgerIndexRoute
  '/_authenticated/sale-view/': typeof AuthenticatedSaleViewIndexRoute
  '/_authenticated/sale/': typeof AuthenticatedSaleIndexRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/supplier-ledger/': typeof AuthenticatedSupplierLedgerIndexRoute
  '/_authenticated/suppliers/': typeof AuthenticatedSuppliersIndexRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexRoute
  '/_authenticated/transaction-ledger/': typeof AuthenticatedTransactionLedgerIndexRoute
  '/_authenticated/transactions/': typeof AuthenticatedTransactionsIndexRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/settings'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/account-ledger-detail'
    | '/customer-ledger-detail'
    | '/purchase-ledger-detail'
    | '/sale-ledger-detail'
    | '/supplier-ledger-detail'
    | '/transaction-ledger-detail'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/account-ledger'
    | '/accounts'
    | '/apps'
    | '/chats'
    | '/customer-ledger'
    | '/customers'
    | '/help-center'
    | '/mobile-load'
    | '/mobile-repair'
    | '/products'
    | '/purchase-add'
    | '/purchase-ledger'
    | '/purchase-view'
    | '/purchase'
    | '/sale-add'
    | '/sale-ledger'
    | '/sale-view'
    | '/sale'
    | '/settings/'
    | '/supplier-ledger'
    | '/suppliers'
    | '/tasks'
    | '/transaction-ledger'
    | '/transactions'
    | '/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/account-ledger-detail'
    | '/customer-ledger-detail'
    | '/purchase-ledger-detail'
    | '/sale-ledger-detail'
    | '/supplier-ledger-detail'
    | '/transaction-ledger-detail'
    | '/'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/account-ledger'
    | '/accounts'
    | '/apps'
    | '/chats'
    | '/customer-ledger'
    | '/customers'
    | '/help-center'
    | '/mobile-load'
    | '/mobile-repair'
    | '/products'
    | '/purchase-add'
    | '/purchase-ledger'
    | '/purchase-view'
    | '/purchase'
    | '/sale-add'
    | '/sale-ledger'
    | '/sale-view'
    | '/sale'
    | '/settings'
    | '/supplier-ledger'
    | '/suppliers'
    | '/tasks'
    | '/transaction-ledger'
    | '/transactions'
    | '/users'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/settings'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/(reports)/account-ledger-detail'
    | '/(reports)/customer-ledger-detail'
    | '/(reports)/purchase-ledger-detail'
    | '/(reports)/sale-ledger-detail'
    | '/(reports)/supplier-ledger-detail'
    | '/(reports)/transaction-ledger-detail'
    | '/_authenticated/'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/account-ledger/'
    | '/_authenticated/accounts/'
    | '/_authenticated/apps/'
    | '/_authenticated/chats/'
    | '/_authenticated/customer-ledger/'
    | '/_authenticated/customers/'
    | '/_authenticated/help-center/'
    | '/_authenticated/mobile-load/'
    | '/_authenticated/mobile-repair/'
    | '/_authenticated/products/'
    | '/_authenticated/purchase-add/'
    | '/_authenticated/purchase-ledger/'
    | '/_authenticated/purchase-view/'
    | '/_authenticated/purchase/'
    | '/_authenticated/sale-add/'
    | '/_authenticated/sale-ledger/'
    | '/_authenticated/sale-view/'
    | '/_authenticated/sale/'
    | '/_authenticated/settings/'
    | '/_authenticated/supplier-ledger/'
    | '/_authenticated/suppliers/'
    | '/_authenticated/tasks/'
    | '/_authenticated/transaction-ledger/'
    | '/_authenticated/transactions/'
    | '/_authenticated/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn2Route: typeof authSignIn2Route
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  reportsAccountLedgerDetailRoute: typeof reportsAccountLedgerDetailRoute
  reportsCustomerLedgerDetailRoute: typeof reportsCustomerLedgerDetailRoute
  reportsPurchaseLedgerDetailRoute: typeof reportsPurchaseLedgerDetailRoute
  reportsSaleLedgerDetailRoute: typeof reportsSaleLedgerDetailRoute
  reportsSupplierLedgerDetailRoute: typeof reportsSupplierLedgerDetailRoute
  reportsTransactionLedgerDetailRoute: typeof reportsTransactionLedgerDetailRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignIn2Route: authSignIn2Route,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  reportsAccountLedgerDetailRoute: reportsAccountLedgerDetailRoute,
  reportsCustomerLedgerDetailRoute: reportsCustomerLedgerDetailRoute,
  reportsPurchaseLedgerDetailRoute: reportsPurchaseLedgerDetailRoute,
  reportsSaleLedgerDetailRoute: reportsSaleLedgerDetailRoute,
  reportsSupplierLedgerDetailRoute: reportsSupplierLedgerDetailRoute,
  reportsTransactionLedgerDetailRoute: reportsTransactionLedgerDetailRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/forgot-password",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503",
        "/(reports)/account-ledger-detail",
        "/(reports)/customer-ledger-detail",
        "/(reports)/purchase-ledger-detail",
        "/(reports)/sale-ledger-detail",
        "/(reports)/supplier-ledger-detail",
        "/(reports)/transaction-ledger-detail"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/account-ledger/",
        "/_authenticated/accounts/",
        "/_authenticated/apps/",
        "/_authenticated/chats/",
        "/_authenticated/customer-ledger/",
        "/_authenticated/customers/",
        "/_authenticated/help-center/",
        "/_authenticated/mobile-load/",
        "/_authenticated/mobile-repair/",
        "/_authenticated/products/",
        "/_authenticated/purchase-add/",
        "/_authenticated/purchase-ledger/",
        "/_authenticated/purchase-view/",
        "/_authenticated/purchase/",
        "/_authenticated/sale-add/",
        "/_authenticated/sale-ledger/",
        "/_authenticated/sale-view/",
        "/_authenticated/sale/",
        "/_authenticated/supplier-ledger/",
        "/_authenticated/suppliers/",
        "/_authenticated/tasks/",
        "/_authenticated/transaction-ledger/",
        "/_authenticated/transactions/",
        "/_authenticated/users/"
      ]
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/display",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.tsx"
    },
    "/(reports)/account-ledger-detail": {
      "filePath": "(reports)/account-ledger-detail.tsx"
    },
    "/(reports)/customer-ledger-detail": {
      "filePath": "(reports)/customer-ledger-detail.tsx"
    },
    "/(reports)/purchase-ledger-detail": {
      "filePath": "(reports)/purchase-ledger-detail.tsx"
    },
    "/(reports)/sale-ledger-detail": {
      "filePath": "(reports)/sale-ledger-detail.tsx"
    },
    "/(reports)/supplier-ledger-detail": {
      "filePath": "(reports)/supplier-ledger-detail.tsx"
    },
    "/(reports)/transaction-ledger-detail": {
      "filePath": "(reports)/transaction-ledger-detail.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/display": {
      "filePath": "_authenticated/settings/display.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/account-ledger/": {
      "filePath": "_authenticated/account-ledger/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/accounts/": {
      "filePath": "_authenticated/accounts/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/apps/": {
      "filePath": "_authenticated/apps/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/chats/": {
      "filePath": "_authenticated/chats/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/customer-ledger/": {
      "filePath": "_authenticated/customer-ledger/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/customers/": {
      "filePath": "_authenticated/customers/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/mobile-load/": {
      "filePath": "_authenticated/mobile-load/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/mobile-repair/": {
      "filePath": "_authenticated/mobile-repair/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/products/": {
      "filePath": "_authenticated/products/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/purchase-add/": {
      "filePath": "_authenticated/purchase-add/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/purchase-ledger/": {
      "filePath": "_authenticated/purchase-ledger/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/purchase-view/": {
      "filePath": "_authenticated/purchase-view/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/purchase/": {
      "filePath": "_authenticated/purchase/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/sale-add/": {
      "filePath": "_authenticated/sale-add/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/sale-ledger/": {
      "filePath": "_authenticated/sale-ledger/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/sale-view/": {
      "filePath": "_authenticated/sale-view/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/sale/": {
      "filePath": "_authenticated/sale/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/supplier-ledger/": {
      "filePath": "_authenticated/supplier-ledger/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/suppliers/": {
      "filePath": "_authenticated/suppliers/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/tasks/": {
      "filePath": "_authenticated/tasks/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/transaction-ledger/": {
      "filePath": "_authenticated/transaction-ledger/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/transactions/": {
      "filePath": "_authenticated/transactions/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
